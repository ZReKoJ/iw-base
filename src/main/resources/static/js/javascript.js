function createArray(length) {
    let arr = new Array(length || 0),
        i = length;

    if (arguments.length > 1) {
        let args = Array.prototype.slice.call(arguments, 1);
        while(i--) arr[length-1 - i] = createArray.apply(this, args);
    }

    return arr;
}

function codeDesign() {
	
	let codeMirror = document.getElementById("codeText");
	
	let codeMirrorEditor = CodeMirror.fromTextArea(codeMirror, {
		lineNumbers : true,
		mode : "javascript",
		theme : "lucario",
		indentUnit : 4,
		tabSize : 4,
		smartIndent : true,
		maxHighlightLength : Infinity,
		extraKeys: {"Ctrl-Space": "autocomplete"}
	});
	
	codeMirrorEditor.setValue(document.documentElement.innerHTML);
	
	$(".btn-glyphicon-title").change(function() {
	    let fileInput = document.getElementById('fileSent');
	    let file = fileInput.files[0];
	    $("#codeFileName").val(file.name);
	        
        let fileReader = new FileReader();
		fileReader.readAsText(file);
        fileReader.onload = function (e) {
        	codeMirrorEditor.setValue(fileReader.result);
		}
	});
	
}

function login(){
	
	$('#login-form-link').click(function(e) {
		$("#login-form").delay(100).fadeIn(100);
 		$("#register-form").fadeOut(100);
		$('#register-form-link').removeClass('active');
		$(this).addClass('active');
		e.preventDefault();
	});
	
	$('#register-form-link').click(function(e) {
		$("#register-form").delay(100).fadeIn(100);
 		$("#login-form").fadeOut(100);
		$('#login-form-link').removeClass('active');
		$(this).addClass('active');
		e.preventDefault();
	});
	
}

function profile() {
	
    let buttons = $('#responsive');
    let links = buttons.find('a');
 
    links.click(function(e) {
    	
        $(this).siblings('a.active').removeClass("active");
        $(this).addClass("active");
        
        let index = $(this).index();
        
        $("div.user-menu>div.user-menu-content").removeClass("active");
        $("div.user-menu>div.user-menu-content").eq(index).addClass("active");
        
    });

    $("[rel='tooltip']").tooltip();    
 
    $('.view').hover(
    		
        function(){
            $(this).find('.caption').slideDown(250); //.fadeIn(250)
        },
        
        function(){
            $(this).find('.caption').slideUp(250); //.fadeOut(205)
        }
        
        
    ); 
}

function setCanvasSize(canvas, width, height){
	canvas.width = width;
	canvas.height = height;
}

class Point {
	constructor(x, y){
		this.x = x;
		this.y = y;
	}
	
	relativeLocation(oldRectangle, newRectangle){
		this.x = Math.floor(newRectangle.width * this.x / oldRectangle.width),
		this.y = Math.floor(newRectangle.height * this.y / oldRectangle.height)
	}
}

class Rectangle {
	constructor(width, height) {
		this.width = width;
		this.height = height;
	}
	
	get center() {
		return this.calculateCenter();
	}
	
	get area() {
		return this.calculateArea();
	}
	
	calculateCenter(){
		return new Point(Math.floor(this.width / 2), Math.floor(this.height / 2));
	}
	
	calculateArea(){
		return this.width * this.height;
	}
	
	distancesTo(point){
		return {
			left: point.x,
			right: this.width - point.x,
			top: point.y,
			down: this.height - point.y
		};
	}
	
	isMoreThan(rectangle){
		return this.width > rectangle.width && this.height > rectangle.height;
	}
	
	isLessThan(rectangle){
		return this.width < rectangle.width && this.height < rectangle.height;
	}
	
	isMoreEqual(rectangle){
		return this.width >= rectangle.width && this.height >= rectangle.height;
	}
	
	isLessEqual(rectangle){
		return this.width <= rectangle.width && this.height <= rectangle.height;
	}
	
}

class Square extends Rectangle {
	constructor(width, height){
		super(width, height);
		let min = Math.min(width, height);
		this.width = min;
		this.height = min;
	}
}

class Cell extends Square {
	constructor(rows, columns, width, height){
		super(width, height);
		this.rows = rows;
		this.columns = columns;
	}
	
	zoomIn(value){
		this.width += value;
		this.height += value;
	}
	
	zoomOut(value){
		this.width -= value;
		this.height -= value;
	}
}

class Map {
	constructor(canvas, numRows, numCols){
		// canvas 
		this.canvas = canvas;
		this.ctx = canvas.getContext("2d");
		// numCells
		this.rows = numRows;
		this.cols = numCols;
		// status 
		this.windowStatus = new Rectangle(canvas.width, canvas.height);
		this.cellStatus = new Cell(this.rows, this.cols, Math.floor(this.windowStatus.width / this.cols), Math.floor(this.windowStatus.height / this.rows));
		this.mapStatus = new Rectangle(this.cellStatus.columns * this.cellStatus.width, this.cellStatus.rows * this.cellStatus.height);
		// the center of the map
		this.mapCenter = this.mapStatus.center;
		
		this.zoomScale = 1,
		this.moveScale = 5,
		this.lineDash = 0,
		this.lineWidth = 1,
		this.zoomZone = 0.6,
		this.margin = undefined;
		
		this.defineMapFeature();
		
		this.mapContent = createArray(this.cellStatus.columns, this.cellStatus.rows);
		
		this.mouseAt = {
			windowPosition: { x: "x", y: "y" },
			mapPosition: { x: "x", y: "y" },
			cellPosition: { x: "x", y: "y" }
		}
	}
	
	defineMouseAt(x, y){
		this.mouseAt.windowPosition.x = x;
		this.mouseAt.windowPosition.y = y;
		this.mouseAt.mapPosition.x = this.mouseAt.windowPosition.x - this.margin.left;
		this.mouseAt.mapPosition.y = this.mouseAt.windowPosition.y - this.margin.top;
		this.mouseAt.cellPosition.x = Math.floor(this.mouseAt.mapPosition.x / this.cellStatus.width);
		this.mouseAt.cellPosition.y = Math.floor(this.mouseAt.mapPosition.y / this.cellStatus.height);
	}
	
	defineMapFeature(){
		this.lineDash = (this.mapStatus.width < this.windowStatus.width || this.mapStatus.height < this.windowStatus.height) ? 0 : 1; 
		
		let windowDistancesTo = this.windowStatus.distancesTo(this.windowStatus.center);
		let mapDistancesTo = this.mapStatus.distancesTo(this.mapCenter);
		this.margin = {
	        left : windowDistancesTo.left - mapDistancesTo.left,
	        right : windowDistancesTo.right - mapDistancesTo.right,
	        top : windowDistancesTo.top - mapDistancesTo.top,
	        down : windowDistancesTo.down - mapDistancesTo.down
	    }
	}
	
	zoomIn(){
		let windowCenter = this.windowStatus.center;
		let horizontal = this.mouseAt.windowPosition.x - windowCenter.x;
		let vertical = this.mouseAt.windowPosition.y - windowCenter.y;
		if (Math.abs(horizontal) < windowCenter.x * this.zoomZone && Math.abs(vertical) < windowCenter.y * this.zoomZone){
			this.cellStatus.zoomIn(this.zoomScale);
            if (this.windowStatus.isLessThan(new Rectangle(this.cellStatus.width * 10, this.cellStatus.height * 10))){
                this.cellStatus.zoomOut(this.zoomScale);
            }
		}
		else {
			this.mapCenter.x += (horizontal > 0) ? this.moveScale : this.moveScale * -1;
			this.mapCenter.y += (vertical > 0) ? this.moveScale : this.moveScale * -1;
		}
	}
	
	zoomOut(){
		let windowCenter = this.windowStatus.center;
		let horizontal = this.mouseAt.windowPosition.x - windowCenter.x;
		let vertical = this.mouseAt.windowPosition.y - windowCenter.y;
		if (Math.abs(horizontal) < windowCenter.x * this.zoomZone && Math.abs(vertical) < windowCenter.y * this.zoomZone){
			this.cellStatus.zoomOut(this.zoomScale);
            if (this.windowStatus.isMoreThan(this.mapStatus)){
                this.cellStatus.zoomIn(this.zoomScale);
            }
		}
		else {
			this.mapCenter.x += (horizontal > 0) ? this.moveScale * -1 : this.moveScale;
	    	this.mapCenter.y += (vertical > 0) ? this.moveScale * -1 : this.moveScale;
		}
	}
	
	setImageOnCell(x, y, image, index){
		if (0 <= x && x < this.cellStatus.columns && 0 <= y && y < this.cellStatus.rows){
			this.mapContent[x][y] = {
	    			image: $('.selected')[0],
	    			index: index
	    	}
		}
	}
	
	drawCell(x, y, image=undefined){
	    this.ctx.fillStyle = "#00FFEE";
		if (0 <= x && x < this.cellStatus.columns && 0 <= y && y < this.cellStatus.rows) {
			if (image == undefined) {
				this.ctx.fillRect(x * this.cellStatus.width + this.margin.left, y * this.cellStatus.height + this.margin.top, this.cellStatus.width, this.cellStatus.height);
			}
			else {
				this.ctx.drawImage(image, x * this.cellStatus.width + this.margin.left, y * this.cellStatus.height + this.margin.top, this.cellStatus.width, this.cellStatus.height);
			}
		}
	}
	
	drawMapContent(){
	    for (let i = 0; i < this.cellStatus.columns; i++){
	        for (let j = 0; j < this.cellStatus.rows; j++){
	            if (this.mapContent[i][j] != undefined) {
	                this.drawCell(i, j, this.mapContent[i][j].image);
	            }
	        }
	    }
	    return this;
	}
	
	drawCellMap() {

	    this.ctx.setLineDash([this.lineDash, this.lineDash]);
	    this.ctx.lineWidth = this.lineWidth;
	    this.ctx.strokeStyle = "gray";
	    
		let coord = {
	    	left : (this.margin.left > 0) ? this.margin.left : 0,
	        right : (this.margin.right > 0) ? this.windowStatus.width - this.margin.right : this.windowStatus.width,
			up : (this.margin.top > 0) ? this.margin.top : 0,
	        down : (this.margin.down > 0) ? this.windowStatus.height - this.margin.down : this.windowStatus.height
		}
	    
	    let i = (this.margin.left > 0) ? this.margin.left : this.cellStatus.width - Math.abs(this.margin.left % this.cellStatus.width);
	    let j = (this.margin.top > 0) ? this.margin.top : this.cellStatus.height - Math.abs(this.margin.top % this.cellStatus.height);

	    while (i <= coord.right){
	    	this.ctx.moveTo(i + 0.5, coord.up);
	    	this.ctx.lineTo(i + 0.5, coord.down);
	        i += this.cellStatus.width;
	    }

	    while (j <= coord.down){
	    	this.ctx.moveTo(coord.left, j + 0.5);
	    	this.ctx.lineTo(coord.right, j + 0.5);
	        j += this.cellStatus.height;
	    }
	    
	    this.ctx.stroke();
	    return this;
	}
	
	writeInfo(){
		let distancesTo;
		this.ctx.fillStyle = "white";
		this.ctx.font = "20px Arial";
		this.ctx.fillText("[" + this.mouseAt.windowPosition.x + ", " + this.mouseAt.windowPosition.y + "]", 10, 20);
		this.ctx.fillText("[" + this.mouseAt.mapPosition.x + ", " + this.mouseAt.mapPosition.y + "]", 10, 40);
		this.ctx.fillText("[" + this.mouseAt.cellPosition.x + ", " + this.mouseAt.cellPosition.y + "]", 10, 60);
		this.ctx.font = "15px Arial";
		this.ctx.fillText("Dimension win [" + this.windowStatus.width + ", " + this.windowStatus.height + "]", 10, 80);
		this.ctx.fillText("Dimension map [" + this.mapStatus.width + ", " + this.mapStatus.height + "]", 10, 100);
		this.ctx.fillText("Dimension cell [" + this.cellStatus.width + ", " + this.cellStatus.height + "]", 10, 120);
		distancesTo = this.windowStatus.distancesTo(this.windowStatus.center);
		this.ctx.fillText("Distance win [" + distancesTo.left + ", " + distancesTo.right + ", " + distancesTo.top + ", " + distancesTo.down + "]", 10, 140);
		distancesTo = this.mapStatus.distancesTo(this.mapCenter);
		this.ctx.fillText("Distance map [" + distancesTo.left + ", " + distancesTo.right + ", " + distancesTo.top + ", " + distancesTo.down + "]", 10, 160);
		this.ctx.fillText("Center [" + this.mapCenter.x + ", " + this.mapCenter.y + "]", 10, 180);
		this.ctx.fillText("Margin [" + this.margin.left + ", " + this.margin.right + ", " + this.margin.top + ", " + this.margin.down + "]", 10, 200);
		this.ctx.fillText("Canvas [" + this.canvas.width + ", " + this.canvas.height + "]", 10, 220);
		return this;
	}
	
	json(){
		let result = {
			cellDim : undefined,
			data : undefined
		}
		
		result.cellDim = {
			x : this.cols,
			y : this.rows
		}
		
		result.data = createArray(this.rows, this.cols);
		
		for (let i = 0; i < this.cols; i++){
	        for (let j = 0; j < this.rows; j++){
	            if (this.mapContent[i][j] != undefined) {
	            	result.data[i][j] = this.mapContent[i][j].index;
	            }
	            else {
	            	result.data[i][j] = 0;
	            }
	        }
		}
		return JSON.stringify(result);
	}
	
	reset(canvas){
		this.canvas = canvas;
		this.windowStatus = new Rectangle(canvas.width, canvas.height);
		this.cellStatus = new Cell(this.rows, this.cols, Math.floor(this.windowStatus.width / this.cols), Math.floor(this.windowStatus.height / this.rows));
		this.mapStatus = new Rectangle(this.cellStatus.columns * this.cellStatus.width, this.cellStatus.rows * this.cellStatus.height);
		this.mapCenter = this.mapStatus.center;
		this.defineMapFeature();
	}
	
	clear() {
	    this.ctx.save();
	    this.ctx.beginPath();
	    this.ctx.setTransform(1, 0, 0, 1, 0, 0);
	    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
	    this.ctx.restore();
	    return this;
	}
}

function mapDesign() {
	
	let canvas = document.getElementById("canvas");
	let ctx = canvas.getContext("2d");
	let parent = $(canvas).parent();
	let grid = document.getElementById("grid-element");

	setCanvasSize(canvas, parent.width(), parent.width());
	grid.style.height = canvas.height + "px";
	
	let map = new Map(canvas, 100, 100);
	
	let index;
	let drag = false;
	
	canvas.addEventListener('mousemove', function(event) {
		let rect = canvas.getBoundingClientRect();
		let x = Math.floor((event.clientX - rect.left) * (canvas.width / rect.width));
        let y = Math.floor((event.clientY - rect.top) * (canvas.height / rect.height));
		map.defineMouseAt(x, y);
		
	    if (drag) {
	    	map.setImageOnCell(map.mouseAt.cellPosition.x, map.mouseAt.cellPosition.y, $('.selected')[0], index);
	    }
	    
	    map.clear().drawCellMap().drawMapContent().writeInfo();
	    map.drawCell(map.mouseAt.cellPosition.x, map.mouseAt.cellPosition.y);
	    
	    event.returnValue = false;
	});

	canvas.addEventListener('mousedown', function(event) {

		drag = true;
	    
	    map.setImageOnCell(map.mouseAt.cellPosition.x, map.mouseAt.cellPosition.y, $('.selected')[0], index);
	    
	    event.returnValue = false;
	})

	canvas.addEventListener('mouseup',function(event){

	    drag = false;
	    
	    event.returnValue = false;
	    
	});

	canvas.addEventListener('wheel', function(event){
		
		if (event.deltaY < 0){
			map.zoomIn();
		}
		else {
			map.zoomOut();
		}
		
        let oldMapStatus = map.mapStatus;
        map.mapStatus = new Rectangle(map.cellStatus.columns * map.cellStatus.width, map.cellStatus.rows * map.cellStatus.height);
        map.mapCenter.relativeLocation(oldMapStatus, map.mapStatus);
        map.defineMapFeature();
        map.clear().drawCellMap().drawMapContent().writeInfo();
	    map.drawCell(map.mouseAt.cellPosition.x, map.mouseAt.cellPosition.y);
	    
	    event.returnValue = false;
	    
	});
	
	window.onresize = function() {

		setCanvasSize(canvas, parent.width(), parent.width());
		grid.style.height = canvas.height + "px";
		map.reset(canvas);
	    map.clear().drawCellMap().drawMapContent().writeInfo();
    
    };

	let path;
	for (let x = 0; x < 325; x++){
		path = "<img class='icon' src='/static/img/map2/component (" + x + ").png'>";
		$('#grid-element').append(path)
	}
    
	let imgs = $('#grid-element').find('img');
	
	imgs.click(function(e) {
		$(this).addClass("selected"); 
		$(this).siblings('img.icon.selected').removeClass("selected");
		index = $(this).index();
	});
	
	imgs.mouseover(function(){
		$(this).attr("style", "border: 2px solid white");
		$(this).siblings('img.icon').removeAttr( "style" );
	});
	
	document.getElementById("test").addEventListener("click", function(){
		console.log(map.json());
	});

	
    map.drawCellMap().writeInfo();
}

function isFullScreen(){
	if (document.fullscreenElement) {
        return true;
    }
    else if (document.webkitFullscreenElement) {
        return true;
    }
    else if (document.mozFullScreenElement) {
        return true;
    }
    else {
    	return false;
    }
}

function fullscreen(){
    
	if(canvas.webkitRequestFullScreen) {
		canvas.webkitRequestFullScreen();
	}
	else {
		canvas.mozRequestFullScreen();
	}
	
}

function readTextFile(file, callback) {
    var rawFile = new XMLHttpRequest();
    rawFile.overrideMimeType("application/json");
    rawFile.open("GET", file, true);
    rawFile.onreadystatechange = function() {
        if (rawFile.readyState === 4 && rawFile.status == "200") {
            callback(rawFile.responseText);
        }
    }
    rawFile.send(rawFile.responseText);
}


function playing() {

	let canvas = document.getElementById("canvas");
	let ctx = canvas.getContext("2d");
	let parent = $(canvas).parent();
	
	setCanvasSize(canvas, parent.width(), parent.width());
	
	/*
	readTextFile("/static/test.json", function(text){
	    var data = JSON.parse(text);
	    for (let i = 0; i < data.numCell.x; i++){
	    	for (let j = 0; j < data.numCell.y; j++){
	    		a += data.data[i][j] + " ";
	    	}
	    	a += "\n";
	    }
		console.log(a);
	});
	 */

	let map = new Map(canvas, 100, 100);
	
	let data = '{"cellDim":{"x":100,"y":100},"data":' +
	'[[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,205,205,205,205,205,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,205,205,205,205,205,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,205,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[205,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,205,205,205,0,205,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[205,205,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,205,0,205,0,205,0,205,0,205,205,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[205,205,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,205,0,205,205,205,0,205,0,0,205,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,205,205,205,205,205,205,205,0,0,205,0,0,0,205,0,205,0,0,205,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,205,0,0,0,0,0,205,205,205,205,0,205,205,205,0,205,205,0,205,0,0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,205,205,205,205,205,205,205,0,205,0,0,205,0,205,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,205,205,205,205,0,205,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,205,0,205,0,0,205,0,205,205,205,205,205,205,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,205,205,205,205,205,0,205,0,205,205,0,205,0,0,0,0,0,0,205,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,205,0,0,0,205,0,205,0,0,205,0,205,0,205,205,205,205,205,205,0,205,0,0,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,205,205,205,0,205,0,205,0,205,205,0,205,0,205,0,0,0,0,0,0,205,0,0,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,0,0,205,0,205,0,205,0,0,0,0,205,0,205,205,205,205,205,205,0,205,0,0,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,205,205,205,0,205,205,205,0,205,205,205,205,0,0,0,0,0,0,205,0,205,0,0,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,205,0,0,205,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,205,205,205,0,0,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,207,207,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0],' +
	'[0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,205,205,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,207,207,207,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,205,205,205,205,0,0,0,0,205,205,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,205,0,0,0,0,205,205,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,205,0,0,0,0,205,205,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,205,0,0,0,0,205,205,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,206,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,205,0,0,0,0,205,205,0,0,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,205,0,0,0,0,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,205,0,0,0,0,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,0,205,0,0,0,205,0,0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,205,205,205,205,205,205,205,205,205,0,0,0,0,0,205,205,205,205,205,205,205,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[0,0,205,0,0,0,0,0,0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,205,205,0,0,0,0,0,0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,0,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,0,0,0,0,0,205,205,205,205,205,0,0,0,0,0,206,206,206,206,206,206,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,207,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,0,0,0,0,0,205,0,0,0,205,0,0,0,0,0,206,206,206,206,206,206,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,0,0,0,0,0,205,0,0,0,205,0,0,0,0,0,206,206,206,206,206,206,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,205,205,205,205,205,205,205,205,0,0,205,0,0,0,0,0,206,206,206,206,206,206,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,0,0,205,0,0,0,205,205,205,205,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,0,205,205,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,205,205,205,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,205,0,205,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,205,0,205,205,205,205,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,205,0,0,0,0,0,205,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,0,0],' +
	'[205,0,205,0,205,0,0,0,205,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0],' +
	'[205,205,205,205,205,205,205,205,205,0,0,0,0,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,0,0,0,0,0,0,0],' +
	'[205,0,0,0,205,0,0,0,205,0,0,0,206,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,0,0,0,0,0],' +
	'[205,0,0,0,205,0,0,0,205,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,0,0,0,0],' +
	'[205,0,0,0,205,205,205,205,205,0,0,206,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,0,0,0,0],' +
	'[205,0,0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,207,207,207,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,0,0,0],' +
	'[205,0,0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,207,207,207,207,207,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0,0,0,0],' +
	'[205,0,0,0,205,0,0,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0],' +
	'[205,205,0,0,205,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,0],' +
	'[0,205,0,0,205,0,0,0,0,206,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,205,205,205,205,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,195,195,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,205,205,205,205,205,205,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,0,205,0,0,0,205,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,0,205,0,0,0,205,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206],' +
	'[0,0,0,205,0,0,0,205,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207],' +
	'[205,0,0,205,0,0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,195,206,206,206,206,206,206,206,207,207],' +
	'[205,0,0,0,0,0,0,205,205,0,0,0,0,0,0,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207],' +
	'[205,205,205,205,205,0,0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207],' +
	'[0,0,0,0,205,0,0,0,205,0,0,0,0,0,0,0,206,206,206,206,206,206,208,208,208,208,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207],' +
	'[0,0,0,0,205,0,0,0,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,208,208,208,208,208,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207],' +
	'[0,0,0,0,205,205,205,205,205,0,0,205,0,0,0,0,0,205,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207],' +
	'[0,0,0,0,205,0,0,0,0,0,0,205,0,0,0,0,0,205,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207],' +
	'[0,0,0,0,205,0,0,0,0,0,0,205,205,205,205,205,205,205,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,195,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207],' +
	'[0,0,0,0,205,0,0,0,0,0,0,205,0,0,0,0,0,205,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207],' +
	'[205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,205,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,205,0,0,0,0,205,0,0,0,0,205,0,0,205,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,205,0,0,0,0,205,0,0,0,0,205,0,0,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,205,0,0,0,0,205,0,0,0,0,205,0,0,205,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,205,205,0,0,0,205,205,205,205,205,205,0,0,205,205,205,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,0,205,0,0,0,0,205,0,0,0,205,0,0,0,0,0,205,205,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,0,205,205,205,205,205,205,0,0,0,205,0,0,0,0,0,0,205,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,0,0,0,0,205,0,0,0,0,0,205,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,206,206,206,206,206,206,195,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,0,0,0,0,205,0,0,0,0,0,205,0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,0,0,0,0,0,0,0,205,0,0,0,0,0,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,195,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,205,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,195,206,195,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,205,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[0,0,0,0,0,0,205,0,0,0,0,0,0,0,0,0,0,205,0,0,0,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[0,0,0,0,0,0,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207],' +
	'[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207]]}';
	data = JSON.parse(data);

	for (let i = 0; i < map.cols; i++){
    	for (let j = 0; j < map.rows; j++){
    		map.mapContent[i][j] = {
    			image : undefined,
    			index : data.data[i][j]
    		}
    		let img = document.createElement("img");
    		img.src = "/static/img/map2/component (" + map.mapContent[i][j].index + ").png";
    		map.mapContent[i][j].image = img;
    	}
    }
	console.log(map.mapContent);

	canvas.addEventListener('mousemove', function(event) {
		let rect = canvas.getBoundingClientRect();
		let x = Math.floor((event.clientX - rect.left) * (canvas.width / rect.width));
        let y = Math.floor((event.clientY - rect.top) * (canvas.height / rect.height));
		map.defineMouseAt(x, y);

	    map.clear().drawMapContent();
	    map.drawCell(map.mouseAt.cellPosition.x, map.mouseAt.cellPosition.y);
	    
	    event.returnValue = false;
	});

	canvas.addEventListener('wheel', function(event){
		
		if (event.deltaY < 0){
			map.zoomIn();
		}
		else {
			map.zoomOut();
		}
		
        let oldMapStatus = map.mapStatus;
        map.mapStatus = new Rectangle(map.cellStatus.columns * map.cellStatus.width, map.cellStatus.rows * map.cellStatus.height);
        map.mapCenter.relativeLocation(oldMapStatus, map.mapStatus);
        map.defineMapFeature();
        map.clear().drawMapContent();
	    map.drawCell(map.mouseAt.cellPosition.x, map.mouseAt.cellPosition.y);
	    
	    event.returnValue = false;
	    
	});

	window.onresize = function() {
		
		if (isFullScreen()){
			setCanvasSize(canvas, window.innerWidth, window.innerHeight);
		}
		else {
			setCanvasSize(canvas, parent.width(), parent.width());
		}
		
		map.reset(canvas);
	    map.clear().drawMapContent();
    
    };

	document.getElementById("full-screen").addEventListener("click", fullscreen);
	
    map.drawMapContent();

}